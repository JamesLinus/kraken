/**
 * @section Grid
 * Structure and layout
 */

/**
 * Base grid styles: single column
 */
.container {
	max-width: $container-max-width;
	width: $container-width;
	margin-left: auto;
	margin-right: auto;
}

.grid {
	margin-left: $grid-margins * -1;
	margin-right: $grid-margins * -1;
}

.grid-item {
	float: left;
	width: 100%;
	padding-left: $grid-margins;
	padding-right: $grid-margins;
}


/**
 * Breakpoint-specific layout
 */
@each $breakpoint, $options in ($grid-breakpoints) {
	@media (min-width: map-get($breakpoints, #{$breakpoint})) {

		@each $grid, $width in ($grid-sizes) {

			@if map-get($options, no-namespace) {
				.grid-item--#{$grid} {
					width: $width;
				}
			} @else {
				.grid-item--#{$grid}-#{$breakpoint} {
					width: $width;
				}
			}

		}

		@if map-get($options, content-choreo) {
			@if map-get($options, no-namespace) {
				.grid-item--flip {
					float: right;
				}

				.grid-item--unflip {
					float: left;
				}
			} @else {
				.grid-item--flip-#{$breakpoint} {
					float: right;
				}

				.grid-item--unflip-#{$breakpoint} {
					float: left;
				}
			}
		}

		@if map-get($options, offsets) {
			@each $grid, $width in ($grid-sizes) {

				@if map-get($options, no-namespace) {
					.grid-item--offset-#{$grid} {
						margin-left: $width;
					}
				} @else {
					.grid-item--offset-#{$grid}-#{$breakpoint} {
						margin-left: $width;
					}
				}

			}
		}

		@if map-get($options, offset-clear) {

			@if map-get($options, no-namespace) {
				.grid-item--no-offset {
					margin-left: 0;
				}
			} @else {
				.grid-item--no-offset-#{$breakpoint} {
					margin-left: 0;
				}
			}

		}

	}
}

// Add clearfix
.container,
.grid {
	@extend .u-clear;
}